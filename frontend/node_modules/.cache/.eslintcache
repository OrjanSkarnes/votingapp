[{"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/index.js":"1","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/App.js":"2","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/Navigation.js":"3","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/LoginPage.js":"4","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/VotingPage.js":"5","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/Polls.js":"6","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/Poll.js":"7","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/Result.js":"8","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/Dashboard.js":"9","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/helpers/sessionStorage.js":"10","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/helpers/userService.js":"11","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/helpers/countdown.js":"12","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/helpers/pollService.js":"13","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/helpers/voteService.js":"14","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/helpers/fetchWrapper.js":"15"},{"size":177,"mtime":1699271818530,"results":"16","hashOfConfig":"17"},{"size":1067,"mtime":1699271818529,"results":"18","hashOfConfig":"17"},{"size":731,"mtime":1699271818529,"results":"19","hashOfConfig":"17"},{"size":2649,"mtime":1699271818529,"results":"20","hashOfConfig":"17"},{"size":4009,"mtime":1699271818530,"results":"21","hashOfConfig":"17"},{"size":4206,"mtime":1699271818530,"results":"22","hashOfConfig":"17"},{"size":4219,"mtime":1699463068938,"results":"23","hashOfConfig":"17"},{"size":2188,"mtime":1699271818530,"results":"24","hashOfConfig":"17"},{"size":3138,"mtime":1699461051769,"results":"25","hashOfConfig":"17"},{"size":2038,"mtime":1699271818530,"results":"26","hashOfConfig":"17"},{"size":632,"mtime":1699463068929,"results":"27","hashOfConfig":"17"},{"size":1797,"mtime":1699271818530,"results":"28","hashOfConfig":"17"},{"size":1340,"mtime":1699271818530,"results":"29","hashOfConfig":"17"},{"size":319,"mtime":1699271818530,"results":"30","hashOfConfig":"17"},{"size":1179,"mtime":1699271818530,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ksww60",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/index.js",[],[],"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/App.js",[],[],"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/Navigation.js",[],[],"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/LoginPage.js",[],[],"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/VotingPage.js",[],[],"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/Polls.js",[],[],"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/Poll.js",[],[],"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/Result.js",[],[],"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/Dashboard.js",["78"],[],"import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { isUserLoggedIn } from './helpers/sessionStorage';\nimport fetchWrapper from './helpers/fetchWrapper';\nimport { getAllPublicPolls } from './helpers/pollService';\nimport { PollCard} from \"./Polls\";\n\nexport const Dashboard = (props) => {\n    const navigate = useNavigate();\n    const isLoggedIn = isUserLoggedIn();\n    const [pollError, setPollError] = React.useState(\"\");\n    const [pollId, setPollId] = React.useState('');\n    const [publicPolls, setPublicPolls] = React.useState([]);\n\n    // Load in publicly visible polls\n    React.useEffect(() => {\n        getAllPublicPolls().then(data => {\n            setPublicPolls(data);\n        }).catch((error) => {\n            console.error(error);\n        });\n    }, []);\n\n    const handleJoinPoll = async() => {\n        // Check that the pollId is not empty and that the poll exists in the database\n        if (pollId === '') {\n            setPollError('Please enter a poll ID');\n            return;\n        }\n        // Call your Spring REST API to check if the poll exists\n        fetchWrapper(`/polls/${pollId}`, 'GET').then(data => {\n            navigate(`/vote/${pollId}`);\n        }).catch((error) => {\n            if (error?.status === 404) {\n                setPollError('Poll not found')\n            }\n        });\n\n        // Redirect to the voting page with the given pollId\n    };\n\n    return (\n        <>\n            <div className='container'>\n                <h1>Welcome to SimplePoll</h1>\n                <div className='search-field'>\n                    <input type=\"text\" placeholder=\"Enter Poll ID\" id=\"pollIdInput\" onChange={e => setPollId(e.target.value)}/>\n                    <button onClick={() => handleJoinPoll()}>Vote on poll</button>\n                </div>\n                {pollError && <div className=\"error\">{pollError}</div>}\n                {!isLoggedIn ?\n                <button onClick={() => navigate('/login')}>Login / Register</button> :\n                    (\n                        <div className='logged-in-buttons'>\n                            <button onClick={() => navigate('/poll?create=true')}>Create poll</button>\n                            <button onClick={() => navigate('/polls')}>Manage poll</button>\n                           { /* <button onClick={() => navigate('/groups')}>Manage Groups</button> */}\n                        </div>\n                    )\n                }\n\n            </div>\n            <div>\n                {publicPolls && <ManagePublicPolls polls={publicPolls} />}\n            </div>\n        </>\n    );\n}\n\nconst ManagePublicPolls = ({ polls }) => {\n    const navigate = useNavigate();\n\n    return (\n        <div className=\"container\">\n            <h2>Pubic polls</h2>\n            {polls.map(poll => (\n                <>\n                    <PollCard key={poll.id} poll={poll} />\n                    {/*TODO: Fix the positioning of this button!*/}\n                    {/*<button onClick={() => navigate(`/vote/${poll.id}`)}>Vote on Poll</button>*/}\n                </>\n            ))}\n        </div>\n    );\n}\n\n\nexport default Dashboard;\n","/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/helpers/sessionStorage.js",[],[],"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/helpers/userService.js",[],[],"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/helpers/countdown.js",[],[],"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/helpers/pollService.js",[],[],"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/helpers/voteService.js",[],[],"/Users/palvindenes/Documents/EMNER/DAT250/votingapp/frontend/src/helpers/fetchWrapper.js",[],[],{"ruleId":"79","severity":1,"message":"80","line":71,"column":11,"nodeType":"81","messageId":"82","endLine":71,"endColumn":19},"no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar"]